{"version":3,"sources":["./src/app/pages/auth/reset-password/reset-password-routing.module.ts","./src/app/pages/auth/reset-password/reset-password.module.ts","./src/app/pages/auth/reset-password/reset-password.page.ts","./src/app/pages/auth/reset-password/reset-password.page.scss","./src/app/pages/auth/reset-password/reset-password.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAiB;KAC7B;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACF;AAEA;AAEoC;AAEvB;AACE;IAY/C,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAVnC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,sEAAY;YACZ,0FAA8B;SAC/B;QACD,YAAY,EAAE,CAAC,mEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBc;AACW;AAEJ;AACE;AACc;IAO5D,iBAAiB,SAAjB,iBAAiB;IA2B5B,YACS,QAAwB,EAAS,IAAe,EAC/C,cAA8B,EAC9B,KAAY,EACZ,WAAuB;QAHxB,aAAQ,GAAR,QAAQ,CAAgB;QAAS,SAAI,GAAJ,IAAI,CAAW;QAC/C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAO;QACZ,gBAAW,GAAX,WAAW,CAAY;QA3BjC,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,IAAI,CAAC;QACb,gBAAW,GAAG;YACZ;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,gIAAgI;aACvI;YACD;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,gIAAgI;aACvI;YACD;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,gIAAgI;aACvI;SACF;QAOD,UAAK,GAAO,EAAE,CAAC;QAOR,cAAS,GAAG;YACjB,YAAY,EAAE,CAAC;YACf,KAAK,EAAE,GAAG;SACX,CAAC;IAJE,CAAC;IAKL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QACrD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC;IAC3D,CAAC;IACD,iBAAiB,CAAC,IAAW;QAE7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,IAAI,GAAG,EAAC,OAAO,EAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC,IAAI,GAAC,GAAG,GAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC/E,CAAC,GAAO,EAAE,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;YAErB,IAAG,GAAG,CAAC,MAAM,IAAI,GAAG,EACpB;gBACE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBACtD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;aACnC;iBAED;gBACE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;aACrD;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CAAC;IACN,CAAC;IACD,aAAa,CAAC,YAAY,EAAC,gBAAgB;QAEzC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,gBAAgB,CAAC,CAAC;QAC3C,IAAI,gBAAgB,IAAI,SAAS,EAAE;YACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SAEpB;aAAK,IAAI,YAAY,IAAE,gBAAgB,EAAE;YACtC,IAAI,CAAC,QAAQ,GAAG,+CAA+C,CAAC;YAChE,UAAU,CAAC,GAAE,EAAE;gBACb,sBAAsB;YAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;SACV;aAAM,IAAI,YAAY,IAAE,gBAAgB,EACzC;YACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;aAED;YACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;IAEH,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;CAGF;;YAvGmB,0DAAc;YAJzB,4DAAU;YAGV,2DAAc;YAAE,mDAAM;YAEtB,mFAAW;;;qBAUjB,oDAAS,SAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;AAH1B,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,mFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CA+F7B;AA/F6B;;;;;;;;;;;;;ACZ9B,+DAAe,8CAA8C,+HAA+H,E;;;;;;;;;;;;ACA5L,+DAAe,ytBAAytB,YAAY,gFAAgF,WAAW,k4DAAk4D,uBAAuB,0LAA0L,mFAAmF,8xBAA8xB,uBAAuB,0LAA0L,yCAAyC,mOAAmO,UAAU,kRAAkR,uBAAuB,mMAAmM,sBAAsB,wWAAwW,sBAAsB,+uBAA+uB,E","file":"src_app_pages_auth_reset-password_reset-password_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ResetPasswordPage } from './reset-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResetPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ResetPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\r\n\r\nimport { ResetPasswordPage } from './reset-password.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    ResetPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ResetPasswordPage]\r\n})\r\nexport class ResetPasswordPageModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IonSlides, MenuController } from '@ionic/angular';\r\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.page.html',\r\n  styleUrls: ['./reset-password.page.scss'],\r\n})\r\nexport class ResetPasswordPage implements OnInit {\r\n\r\n  \r\n  @ViewChild('slider', { static: true }) private slider: IonSlides;\r\n  hide = true;\r\n  hide2 = true;\r\n  owlcarousel = [\r\n    {\r\n      title: \"Welcome to Divatt\",\r\n      desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy.\",\r\n    },\r\n    {\r\n      title: \"Welcome to Divatt\",\r\n      desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy.\",\r\n    },\r\n    {\r\n      title: \"Welcome to Divatt\",\r\n      desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy.\",\r\n    }\r\n  ]\r\n  btnloader: boolean;\r\n  link: any;\r\n  time: any;\r\n  newPass: any;\r\n  data: any;\r\n  errormsg: string;\r\n  model:any = {};\r\n  constructor(\r\n    public menuCtrl: MenuController,private http:HttpClient,\r\n    private activatedRoute :ActivatedRoute,\r\n    private route:Router,\r\n    private commonUtils:CommonUtils\r\n  ) { }\r\n  public slideOpts = {\r\n    initialSlide: 1,\r\n    speed: 400\r\n  };\r\n  ngOnInit() {\r\n    this.link = this.activatedRoute.snapshot.params.link;\r\n    this.time = this.activatedRoute.snapshot.params.linktime;\r\n  }\r\n  onsubmitResetform(form:NgForm)\r\n  {\r\n  console.log(form.value.newPass);\r\n  \r\n    this.data = {newPass:form.value.newPass};\r\n    this.btnloader = true;\r\n    this.http.post(\"auth/resetPassword/\"+this.link+\"/\"+this.time,this.data).subscribe(\r\n      (res:any) => {\r\n        console.log(\"p\",res);\r\n        \r\n        if(res.status == 200)\r\n        {\r\n          this.commonUtils.presentToast('success', res.message);\r\n          this.route.navigateByUrl('/auth');\r\n        }\r\n        else\r\n        {\r\n          this.commonUtils.presentToast('error', res.message);\r\n        }\r\n        this.btnloader = false;\r\n      },\r\n      (error) =>{\r\n        console.log(error);\r\n        \r\n        this.btnloader = false;\r\n        this.commonUtils.presentToast('error', error.error.message);\r\n      })\r\n  }\r\n  passwordvalid(new_password,conform_password)\r\n  {\r\n    console.log(new_password,conform_password);\r\n    if (conform_password == undefined) {\r\n      this.errormsg = '';\r\n        \r\n    }else if (new_password!=conform_password) {\r\n        this.errormsg = \"New password and conform password  not match.\";\r\n        setTimeout(()=>{                           // <<<---using ()=> syntax\r\n          // this.errormsg = \"\";\r\n      }, 3000);\r\n    }else  if (new_password==conform_password)\r\n    {\r\n      this.errormsg = \"\";\r\n    }\r\n    else\r\n    {\r\n      this.errormsg = \"\";\r\n    }\r\n    \r\n  }\r\n  ionViewWillEnter() {\r\n    this.menuCtrl.enable(false);\r\n  }\r\n// mailForgotPasswordLink\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-content>\\r\\n  <div class=\\\"page-wrapper\\\">\\r\\n    <div class=\\\"authentication-box\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5 p-0 card-left\\\">\\r\\n                <div class=\\\"card bg-primary\\\">\\r\\n                    <div class=\\\"svg-icon\\\">\\r\\n                        <img src=\\\"assets/images/t.png\\\" width=\\\"100%\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"single-item\\\">\\r\\n                       <ion-slides #slider pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\r\\n                          <ion-slide *ngFor=\\\"let data of owlcarousel\\\">\\r\\n                            <div class=\\\"slide\\\">\\r\\n                              <h3>{{data.title}}</h3>\\r\\n                              <p>\\r\\n                                {{data.desc}}\\r\\n                              </p>\\r\\n                            </div>\\r\\n                          </ion-slide>\\r\\n                        </ion-slides>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n                <div class=\\\"col-md-7 p-0 card-right\\\">\\r\\n                    <div class=\\\"card tab2-card\\\">\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                          <mat-tab-group>\\r\\n                            <mat-tab> \\r\\n                              <ng-template mat-tab-label>\\r\\n                                <mat-icon>person_outline</mat-icon>\\r\\n                                <span>Reset Password</span>\\r\\n                              </ng-template>\\r\\n                              <form #resetpsw=\\\"ngForm\\\" (ngSubmit)=\\\"onsubmitResetform(resetpsw)\\\">\\r\\n                                <!-- <div class=\\\"form-group\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Enter Code</mat-label>\\r\\n                                    <input matInput type=\\\"text\\\" name=\\\"code\\\"\\r\\n                                      [(ngModel)]=\\\"code\\\" />\\r\\n                                  </mat-form-field>\\r\\n                                </div> -->\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>New Password</mat-label>\\r\\n                                    <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"newPass\\\"\\r\\n                                      [(ngModel)]=\\\"model.newPass\\\" required   (keyup)=\\\"passwordvalid(model.newPass,model.conformpassword)\\\"/>\\r\\n                                    <a mat-icon-button matSuffix (click)=\\\"hide = !hide\\\"\\r\\n                                      [ngClass]=\\\"{'disabled' : btnloader}\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\r\\n                                      [attr.aria-pressed]=\\\"hide\\\">\\r\\n                                      <mat-icon class=\\\"text-black\\\">{{hide ? 'visibility_off' :\\r\\n                                        'visibility'}}</mat-icon>\\r\\n                                    </a>\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group p-0\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Conform Password</mat-label>\\r\\n                                    <input matInput [type]=\\\"hide2 ? 'password' : 'text'\\\" name=\\\"conformpassword\\\"\\r\\n                                      [(ngModel)]=\\\"model.conformpassword\\\" required   (keyup)=\\\"passwordvalid(model.newPass,model.conformpassword)\\\"/>\\r\\n                                    <a mat-icon-button matSuffix (click)=\\\"hide2 = !hide2\\\"\\r\\n                                      [ngClass]=\\\"{'disabled' : btnloader}\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\r\\n                                      [attr.aria-pressed]=\\\"hide\\\">\\r\\n                                      <mat-icon class=\\\"text-black\\\">{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                                    </a>\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <p class=\\\"text-danger text-center\\\">{{errormsg}}</p>\\r\\n                                <div class=\\\"form-button d-flex justify-content-between align-items-center mt-2\\\">\\r\\n                                  <!-- <button class=\\\"btn btn-primary text-uppercase\\\" [disabled]=\\\"!resetpsw.valid\\\" type=\\\"submit\\\" [ngClass]=\\\"{'disabled' : btnloader}\\\"><i class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"btnloader\\\"></i> Reset Password</button> -->\\r\\n                                  <!-- <button class=\\\"btn btn-primary text-uppercase\\\" [ngClass]=\\\"{'disabled' : errormsg}\\\" type=\\\"submit\\\"  [disabled]=\\\"!resetpsw.valid\\\">\\r\\n                                    <ion-spinner class=\\\"btnloader\\\" name=\\\"crescent\\\" *ngIf=\\\"btnloader\\\"></ion-spinner>\\r\\n                                    \\r\\n                                  </button> -->\\r\\n                                  <ion-button  class=\\\"bg-primary-color\\\"   [ngClass]=\\\"{'disabled' : errormsg}\\\" type=\\\"submit\\\"  [disabled]=\\\"!resetpsw.valid\\\">\\r\\n                                    <ion-spinner class=\\\"btnloader\\\" name=\\\"crescent\\\" *ngIf=\\\"btnloader\\\"></ion-spinner>\\r\\n                                      Reset Password\\r\\n                                  </ion-button>\\r\\n                                  <a [routerLink]=\\\"'/auth'\\\" class=\\\"btn btn-default forgot-pass \\\"> Login Now</a>\\r\\n                              </div>\\r\\n                              </form>\\r\\n                            </mat-tab>\\r\\n                          </mat-tab-group>\\r\\n                           </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}