{"version":3,"sources":["webpack:///src/app/pages/auth/reset-password/reset-password-routing.module.ts","webpack:///src/app/pages/auth/reset-password/reset-password.module.ts","webpack:///src/app/pages/auth/reset-password/reset-password.page.ts","webpack:///src/app/pages/auth/reset-password/reset-password.page.scss","webpack:///src/app/pages/auth/reset-password/reset-password.page.html"],"names":["routes","path","component","ResetPasswordPage","ResetPasswordPageRoutingModule","NgModule","imports","RouterModule","exports","ResetPasswordPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","menuCtrl","http","activatedRoute","route","commonUtils","hide","hide2","owlcarousel","title","desc","model","slideOpts","initialSlide","speed","link","snapshot","params","time","linktime","form","data","newPass","value","btnloader","post","subscribe","res","status","presentToast","message","navigateByUrl","error","new_password","conform_password","undefined","errormsg","setTimeout","enable","MenuController","HttpClient","ActivatedRoute","Router","CommonUtils","ViewChild","Component","selector","template"],"mappings":"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","file":"src_app_pages_auth_reset-password_reset-password_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ResetPasswordPage } from './reset-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ResetPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ResetPasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\r\n\r\nimport { ResetPasswordPage } from './reset-password.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    ResetPasswordPageRoutingModule\r\n  ],\r\n  declarations: [ResetPasswordPage]\r\n})\r\nexport class ResetPasswordPageModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IonSlides, MenuController } from '@ionic/angular';\r\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.page.html',\r\n  styleUrls: ['./reset-password.page.scss'],\r\n})\r\nexport class ResetPasswordPage implements OnInit {\r\n\r\n  \r\n  @ViewChild('slider', { static: true }) private slider: IonSlides;\r\n  hide = true;\r\n  hide2 = true;\r\n  owlcarousel = [\r\n    {\r\n      title: \"Welcome to Divatt\",\r\n      desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy.\",\r\n    },\r\n    {\r\n      title: \"Welcome to Divatt\",\r\n      desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy.\",\r\n    },\r\n    {\r\n      title: \"Welcome to Divatt\",\r\n      desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy.\",\r\n    }\r\n  ]\r\n  btnloader: boolean;\r\n  link: any;\r\n  time: any;\r\n  newPass: any;\r\n  data: any;\r\n  errormsg: string;\r\n  model:any = {};\r\n  constructor(\r\n    public menuCtrl: MenuController,private http:HttpClient,\r\n    private activatedRoute :ActivatedRoute,\r\n    private route:Router,\r\n    private commonUtils:CommonUtils\r\n  ) { }\r\n  public slideOpts = {\r\n    initialSlide: 1,\r\n    speed: 400\r\n  };\r\n  ngOnInit() {\r\n    this.link = this.activatedRoute.snapshot.params.link;\r\n    this.time = this.activatedRoute.snapshot.params.linktime;\r\n  }\r\n  onsubmitResetform(form:NgForm)\r\n  {\r\n  // console.log(form.value.newPass);\r\n  \r\n    this.data = {newPass:form.value.newPass};\r\n    this.btnloader = true;\r\n    this.http.post(\"auth/resetPassword/\"+this.link+\"/\"+this.time,this.data).subscribe(\r\n      (res:any) => {\r\n        // console.log(\"p\",res);\r\n        \r\n        if(res.status == 200)\r\n        {\r\n          this.commonUtils.presentToast('success', res.message);\r\n          this.route.navigateByUrl('/auth');\r\n        }\r\n        else\r\n        {\r\n          this.commonUtils.presentToast('error', res.message);\r\n        }\r\n        this.btnloader = false;\r\n      },\r\n      (error) =>{\r\n        // console.log(error);\r\n        \r\n        this.btnloader = false;\r\n        this.commonUtils.presentToast('error', error.error.message);\r\n      })\r\n  }\r\n  passwordvalid(new_password,conform_password)\r\n  {\r\n    // console.log(new_password,conform_password);\r\n    if (conform_password == undefined) {\r\n      this.errormsg = '';\r\n        \r\n    }else if (new_password!=conform_password) {\r\n        this.errormsg = \"New password and conform password  not match.\";\r\n        setTimeout(()=>{                           // <<<---using ()=> syntax\r\n          // this.errormsg = \"\";\r\n      }, 3000);\r\n    }else  if (new_password==conform_password)\r\n    {\r\n      this.errormsg = \"\";\r\n    }\r\n    else\r\n    {\r\n      this.errormsg = \"\";\r\n    }\r\n    \r\n  }\r\n  ionViewWillEnter() {\r\n    this.menuCtrl.enable(false);\r\n  }\r\n// mailForgotPasswordLink\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-content>\\r\\n  <div class=\\\"page-wrapper\\\">\\r\\n    <div class=\\\"authentication-box\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-5 p-0 card-left\\\">\\r\\n                <div class=\\\"card bg-primary\\\">\\r\\n                    <div class=\\\"svg-icon\\\">\\r\\n                        <img src=\\\"assets/images/t.png\\\" width=\\\"100%\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"single-item\\\">\\r\\n                       <ion-slides #slider pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\r\\n                          <ion-slide *ngFor=\\\"let data of owlcarousel\\\">\\r\\n                            <div class=\\\"slide\\\">\\r\\n                              <h3>{{data.title}}</h3>\\r\\n                              <p>\\r\\n                                {{data.desc}}\\r\\n                              </p>\\r\\n                            </div>\\r\\n                          </ion-slide>\\r\\n                        </ion-slides>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n                <div class=\\\"col-md-7 p-0 card-right\\\">\\r\\n                    <div class=\\\"card tab2-card\\\">\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                          <mat-tab-group>\\r\\n                            <mat-tab> \\r\\n                              <ng-template mat-tab-label>\\r\\n                                <mat-icon>person_outline</mat-icon>\\r\\n                                <span>Reset Password</span>\\r\\n                              </ng-template>\\r\\n                              <form #resetpsw=\\\"ngForm\\\" (ngSubmit)=\\\"onsubmitResetform(resetpsw)\\\">\\r\\n                                <!-- <div class=\\\"form-group\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Enter Code</mat-label>\\r\\n                                    <input matInput type=\\\"text\\\" name=\\\"code\\\"\\r\\n                                      [(ngModel)]=\\\"code\\\" />\\r\\n                                  </mat-form-field>\\r\\n                                </div> -->\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>New Password</mat-label>\\r\\n                                    <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"newPass\\\"\\r\\n                                      [(ngModel)]=\\\"model.newPass\\\" required   (keyup)=\\\"passwordvalid(model.newPass,model.conformpassword)\\\"/>\\r\\n                                    <a mat-icon-button matSuffix (click)=\\\"hide = !hide\\\"\\r\\n                                      [ngClass]=\\\"{'disabled' : btnloader}\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\r\\n                                      [attr.aria-pressed]=\\\"hide\\\">\\r\\n                                      <mat-icon class=\\\"text-black\\\">{{hide ? 'visibility_off' :\\r\\n                                        'visibility'}}</mat-icon>\\r\\n                                    </a>\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group p-0\\\">\\r\\n                                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>Conform Password</mat-label>\\r\\n                                    <input matInput [type]=\\\"hide2 ? 'password' : 'text'\\\" name=\\\"conformpassword\\\"\\r\\n                                      [(ngModel)]=\\\"model.conformpassword\\\" required   (keyup)=\\\"passwordvalid(model.newPass,model.conformpassword)\\\"/>\\r\\n                                    <a mat-icon-button matSuffix (click)=\\\"hide2 = !hide2\\\"\\r\\n                                      [ngClass]=\\\"{'disabled' : btnloader}\\\" [attr.aria-label]=\\\"'Hide password'\\\"\\r\\n                                      [attr.aria-pressed]=\\\"hide\\\">\\r\\n                                      <mat-icon class=\\\"text-black\\\">{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n                                    </a>\\r\\n                                  </mat-form-field>\\r\\n                                </div>\\r\\n                                <p class=\\\"text-danger text-center\\\">{{errormsg}}</p>\\r\\n                                <div class=\\\"form-button d-flex justify-content-between align-items-center mt-2\\\">\\r\\n                                  <!-- <button class=\\\"btn btn-primary text-uppercase\\\" [disabled]=\\\"!resetpsw.valid\\\" type=\\\"submit\\\" [ngClass]=\\\"{'disabled' : btnloader}\\\"><i class=\\\"fa fa-spinner fa-spin\\\" *ngIf=\\\"btnloader\\\"></i> Reset Password</button> -->\\r\\n                                  <!-- <button class=\\\"btn btn-primary text-uppercase\\\" [ngClass]=\\\"{'disabled' : errormsg}\\\" type=\\\"submit\\\"  [disabled]=\\\"!resetpsw.valid\\\">\\r\\n                                    <ion-spinner class=\\\"btnloader\\\" name=\\\"crescent\\\" *ngIf=\\\"btnloader\\\"></ion-spinner>\\r\\n                                    \\r\\n                                  </button> -->\\r\\n                                  <ion-button  class=\\\"bg-primary-color\\\"   [ngClass]=\\\"{'disabled' : errormsg}\\\" type=\\\"submit\\\"  [disabled]=\\\"!resetpsw.valid\\\">\\r\\n                                    <ion-spinner class=\\\"btnloader\\\" name=\\\"crescent\\\" *ngIf=\\\"btnloader\\\"></ion-spinner>\\r\\n                                      Reset Password\\r\\n                                  </ion-button>\\r\\n                                  <a [routerLink]=\\\"'/auth'\\\" class=\\\"btn btn-default forgot-pass \\\"> Login Now</a>\\r\\n                              </div>\\r\\n                              </form>\\r\\n                            </mat-tab>\\r\\n                          </mat-tab-group>\\r\\n                           </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</ion-content>\\r\\n\";"]}