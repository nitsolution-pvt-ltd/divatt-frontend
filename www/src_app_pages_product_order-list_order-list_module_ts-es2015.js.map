{"version":3,"sources":["./src/app/pages/product/order-list/order-list-routing.module.ts","./src/app/pages/product/order-list/order-list.module.ts","./src/app/pages/product/order-list/order-list.page.ts","./src/app/pages/product/order-list/order-list.page.scss","./src/app/pages/product/order-list/order-list.page.html"],"names":[],"mappings":"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","file":"src_app_pages_product_order-list_order-list_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OrderListPage } from './order-list.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderListPage\r\n  },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrderListPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrderListPageRoutingModule } from './order-list-routing.module';\r\n\r\nimport { OrderListPage } from './order-list.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    OrderListPageRoutingModule\r\n  ],\r\n  declarations: [OrderListPage]\r\n})\r\nexport class OrderListPageModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController, ModalController, AlertController } from '@ionic/angular';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ModalPage } from '../../modal/modal.page';\r\n@Component({\r\n  selector: \"app-order-list\",\r\n  templateUrl: \"./order-list.page.html\",\r\n  styleUrls: [\"./order-list.page.scss\"],\r\n})\r\nexport class OrderListPage implements OnInit {\r\n  url: string;\r\n  statustype = 'New'\r\n  tableTitle ='New';\r\n  order_countData: any ={};\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    public toastController: ToastController,\r\n    private modalController: ModalController,\r\n    private alertController: AlertController,\r\n    private commonUtils: CommonUtils,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n  tableListData = [];\r\n  allselectModel;\r\n  itemcheckClick = false;\r\n  checkedList = [];\r\n  tableHeaderData = [\r\n    {\r\n      column_name: \"orderId\",\r\n      display_name: \"Order Id\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"invoiceId\",\r\n      display_name: \"invoice Id\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"displayName\",\r\n      display_name: \"display Name\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"createdOn\",\r\n      display_name: \"Order Date\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    \r\n    {\r\n      column_name: \"mrp\",\r\n      display_name: \"MRP\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"discount\",\r\n      display_name: \"Discount\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"salesPrice\",\r\n      display_name: \"sales Price\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"giftWrapAmount\",\r\n      display_name: \"giftWrap Amount\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"paymentMode\",\r\n      display_name: \"Payment Mode\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"razorpay_payment_id\",\r\n      display_name: \"Razorpay Payment id\",\r\n      sortingButtonName: \"\",\r\n    },\r\n  ];\r\n  isListLoading = false;\r\n  listing_url;\r\n  tableData;\r\n  pageNo;\r\n  sortColumnName = \"\";\r\n  sortOrderName = \"\";\r\n  deleteApi;\r\n  deleteLoading = false;\r\n  restoreApi;\r\n  restoreLoading = false;\r\n  tableValueType;\r\n  private changeStatusSubscribe: Subscription;\r\n  private tableListSubscribe: Subscription;\r\n  private deleteDataSubscribe: Subscription;\r\n  private permissionDataSubscribe: Subscription;\r\n  \r\n  pagePermission;\r\n  // Variables end\r\n\r\n  ngOnInit() {\r\n    // this.commonFunction();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.commonFunction();\r\n  }\r\n\r\n  commonFunction() {\r\n    this.allselectModel = false;\r\n    this.checkedList = [];\r\n    \r\n    \r\n    /*Check permission status start*/\r\n    this.authService.globalparamsData.subscribe((res) => {\r\n      console.log(\"res>>\", res);\r\n      if (res.authority == \"ADMIN\") {\r\n        this.permissionDataSubscribe =\r\n          this.commonUtils.menuPermissionObservable.subscribe((data) => {\r\n            if (data) {\r\n              console.log(\"menu>>\", data);\r\n              console.log(\"this.router.url>>\", this.router.url);\r\n\r\n              let pageUrl = this.router.url.split(\"/\");\r\n              console.log(\"pageUrl\", pageUrl);\r\n\r\n              for (let item of data) {\r\n                if (item.modDetails.url == pageUrl[1]) {\r\n                  if (item.modPrivs.list == true) {\r\n                    console.log(\"-----Permission Granted-----\");\r\n                    this.pagePermission = item;\r\n                    console.log(\"this.pagePermission\", this.pagePermission);\r\n                    this.listing_url = \"userOrder/skuList\";\r\n                    this.onRefresh();\r\n                    // delete api\r\n                    break;\r\n                  } else {\r\n                    console.log(\"-------No Permission--------\");\r\n                    this.router.navigateByUrl(\"/error\");\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        this.router.navigateByUrl(\"/error\");\r\n      }\r\n    });\r\n    /*Check permission status end*/\r\n  }\r\n\r\n   // datatype start\r\n   datatype(identifier)\r\n   {\r\n       console.log(identifier);\r\n       this.statustype = identifier;\r\n       this.tableTitle =identifier;\r\n     this.onRefresh()\r\n    //  this.onListDate(this.statustype,this.listing_url, this.pageNo, this.displayRecord, this.sortColumnName, this.sortOrderName, this.searchTerm);\r\n   }\r\n   // datatype end\r\n\r\n  /*----------------Table list data start----------------*/\r\n\r\n  // Display records start\r\n  displayRecord = 10;\r\n  displayRecords = [\r\n    { id : '1', displayValue: 10},\r\n    { id : '2', displayValue: 25},\r\n    { id : '3', displayValue: 50},\r\n    { id : '4', displayValue: 100},\r\n    // { id : '5', displayValue: '0'}\r\n  ];\r\n  displayRecordChange(_record) {\r\n    console.log(\"_record\", _record);\r\n    \r\n    this.displayRecord = _record;\r\n    this.pageNo = 0;\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,_record,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n  }\r\n  // Display records end\r\n  // List data start\r\n  onListDate(status,_listUrl,_pageNo,_displayRecord,_sortColumnName,_sortOrderName,_searchTerm) {\r\n    this.isListLoading = true;\r\n    let api = _listUrl+'?orderItemStatus='+status+'&page='+_pageNo+'&limit='+_displayRecord+'&sortName='+_sortColumnName+'&sort='+_sortOrderName+'&keyword='+_searchTerm;\r\n    \r\n    this.tableListSubscribe = this.http.get(api).subscribe(\r\n      (res: any) => {\r\n        this.isListLoading = false;\r\n        console.log(\"res data......\", res);\r\n        this.tableData = res;\r\n        var count = [];\r\n        count = res?.data;\r\n        for (let index = 0; index < count.length; index++) {\r\n\r\n          this.tableData.data[index].createdOn = moment(res?.data[index].createdOn,'DD/MM/YYYY hh:mm:ss').format('DD-MM-YYYY');\r\n          \r\n        }\r\n        this.tableListData = res.data;\r\n        this.order_countData = {\r\n          New:res.New,\r\n          Orders:res.Orders,\r\n          Cancelation:res.Cancelation,\r\n          Active:res.Active,\r\n          Delivered:res.Delivered,\r\n          Packed:res.Packed,\r\n          returnRefund:res.returnRefund,\r\n          Shipped:res.Shipped,\r\n          Cancelled:res.Cancelled,\r\n          returnRequest:res.returnRequest,\r\n          Rejected:res.rejected,\r\n          requestForCancelation:res.requestForCancelation\r\n        };\r\n        console.log(\"Order Count Data....\",this.order_countData);\r\n         \r\n\r\n        //---------  check item show start ----------\r\n        if (this.tableListData && this.checkedList) {\r\n          for (let i = 0; i < this.tableListData.length; i++) {\r\n            for (let j = 0; j < this.checkedList.length; j++) {\r\n              if (this.checkedList[j].id == this.tableListData[i].id) {\r\n                this.tableListData[i].isSelected = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      (errRes) => {\r\n        // this.selectLoadingDepend = false;\r\n        this.isListLoading = false;\r\n      }\r\n    );\r\n  }\r\n  // List data end\r\n\r\n  // Pagination start\r\n  setPage(page: number) {\r\n    console.log(\"page\", page);\r\n    console.log(\"page\");\r\n\r\n    this.pageNo = page;\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n  }\r\n  // Pagination end\r\n\r\n  // Sorting start\r\n  isSortTableHeader(_tableHeaderData, _headerItem) {\r\n    console.log(\"_tableHeaderData\", _tableHeaderData);\r\n    console.log(\"_headerItem\", _headerItem);\r\n\r\n    // all field reset first\r\n    _tableHeaderData.forEach((val) => {\r\n      val.sortingButtonName = \"\";\r\n    });\r\n\r\n    _headerItem.orederShow = !_headerItem.orederShow;\r\n    if (_headerItem.orederShow) {\r\n      _headerItem.sortingButtonName = \"ASC\";\r\n    } else {\r\n      _headerItem.sortingButtonName = \"DESC\";\r\n    }\r\n\r\n    this.sortColumnName = _headerItem.column_name;\r\n    this.sortOrderName = _headerItem.sortingButtonName;\r\n\r\n    console.log(\"this.sortColumnName\", this.sortColumnName);\r\n    console.log(\"this.sortOrderName\", this.sortOrderName);\r\n    console.log(\"_tableHeaderData>>\", _tableHeaderData);\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n    \r\n  }\r\n  // Sorting end\r\n\r\n  // Search start\r\n  searchTerm: string = \"\";\r\n  searchList(event) {\r\n    this.searchTerm = event.target.value;\r\n\r\n    console.log(\"this.searchTerm\", this.searchTerm);\r\n\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n\r\n  }\r\n  // Search end\r\n\r\n  // Referesh start\r\n  onRefresh() {\r\n    this.pageNo = 0;\r\n    this.sortColumnName = \"id\";\r\n    this.sortOrderName = \"DESC\";\r\n    this.searchTerm = \"\";\r\n    this.tableValueType = \"0\";\r\n    // table data call\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n\r\n  }\r\n  // Referesh end\r\n \r\n  /*----------------Table list data end----------------*/\r\n  // exportDoc start\r\n  async openorderExportModal(_identifier, _item, _items) {\r\n    console.log('openProfilemodal ...........>>', _identifier);\r\n\r\n    let orderCommentmodal;\r\n    orderCommentmodal = await this.modalController.create({\r\n      component: ModalPage,\r\n      cssClass: 'mymodalClass small profilemodal',\r\n      componentProps: { \r\n        identifier: _identifier,\r\n        modalForm_item: _item,\r\n        modalForm_array: _items\r\n      }\r\n    });\r\n    \r\n    // modal data back to Component\r\n    orderCommentmodal.onDidDismiss()\r\n    .then((getdata) => {\r\n      console.log(\"getdata\",getdata);\r\n      this.onRefresh();\r\n      \r\n    });\r\n\r\n    return await orderCommentmodal.present();\r\n  }\r\n  // exportDoc end\r\n\r\n  // ----------- destroy unsubscription start ---------\r\n  ngOnDestroy() {\r\n    if (this.tableListSubscribe !== undefined) {\r\n      this.tableListSubscribe.unsubscribe();\r\n    }\r\n    \r\n    if (this.permissionDataSubscribe !== undefined) {\r\n      this.permissionDataSubscribe.unsubscribe();\r\n    }\r\n    \r\n  }\r\n  // ----------- destroy unsubscription end ---------\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlci1saXN0LnBhZ2Uuc2NzcyJ9 */\";","export default \"<!-- common header show -->\\r\\n<common-header></common-header>\\r\\n\\r\\n<ion-content class=\\\"order-list\\\">\\r\\n  <div class=\\\"page-body\\\">\\r\\n    <div class=\\\"page-wrapper\\\">\\r\\n      <div class=\\\"table-listing\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <div class=\\\"page-header\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                      <div class=\\\"page-header-left\\\">\\r\\n                          <h3 *ngIf=\\\"tableTitle != 'returnRequest' && tableTitle !='returnRefund'\\\">{{tableTitle}} Order List</h3>\\r\\n                          <h3 *ngIf=\\\"tableTitle == 'returnRequest' || tableTitle =='returnRefund'\\\">{{tableTitle =='returnRefund' ? 'Return/Refund' : 'Return Request'}} Order List</h3>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <ol class=\\\"breadcrumb float-right\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/dashboard'\\\">\\r\\n                                <mat-icon>home</mat-icon>\\r\\n                            </a></li>\\r\\n                        <li class=\\\"breadcrumb-item\\\">\\r\\n                          Order Management\\r\\n                        </li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\">\\r\\n                          Order List\\r\\n                        </li>\\r\\n                    </ol>\\r\\n                </div>\\r\\n                  <!-- <div class=\\\"col-lg-6\\\">\\r\\n                      <ol class=\\\"breadcrumb pull-right\\\">\\r\\n                          <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/dashboard'\\\">\\r\\n                                  <app-feather-icons [icon]=\\\"'home'\\\"></app-feather-icons>\\r\\n                              </a></li>\\r\\n                          <li class=\\\"breadcrumb-item\\\" *ngIf=\\\"breadcrumbs?.parentBreadcrumb\\\">\\r\\n                            Product\\r\\n                          </li>\\r\\n                          <li class=\\\"breadcrumb-item active\\\" *ngIf=\\\"breadcrumbs?.childBreadcrumb\\\">\\r\\n                              Category\\r\\n                          </li>\\r\\n                      </ol>\\r\\n                  </div> -->\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"note-section\\\">\\r\\n          <ion-grid>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\">\\r\\n                <h3 class=\\\"card-row\\\">Orders</h3>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-primary card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('New')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon> new_releases </mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">New</p>\\r\\n                        <p *ngIf=\\\"order_countData?.New\\\"><b>{{order_countData?.New}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.New\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-Purple card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Orders')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>add_shopping_cart</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Orders</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Orders\\\"><b>{{order_countData?.Orders}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Orders\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-info card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Packed')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>store</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Packed</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Packed\\\"><b>{{order_countData?.Packed}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Packed\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-warning card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Shipped')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon> local_shipping</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Shipped</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Shipped\\\"><b>{{order_countData?.Shipped}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Shipped\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-success card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Delivered')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_turned_in</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Delivered</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Delivered\\\"><b>{{order_countData?.Delivered}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Delivered\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\">\\r\\n                <h3 class=\\\"card-row\\\">Approvals</h3>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <!-- Return Request -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('returnRequest')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return Request</p>\\r\\n                        <p *ngIf=\\\"order_countData?.returnRequest\\\"><b>{{order_countData?.returnRequest}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.returnRequest\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Cancel Request -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Request for cancelation')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>cancel_presentation</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Cancel Request</p>\\r\\n                        <p *ngIf=\\\"order_countData?.requestForCancelation\\\"><b>{{order_countData?.requestForCancelation}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.requestForCancelation\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Return Rejected -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Return rejected by admin')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>sync_disabled</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return Request Rejected</p>\\r\\n                        <p ><b>{{tabeData?.returnRejectedByAdmin ? tabeData?.returnRejectedByAdmin :'0'}}</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- return request approve -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Return request approved')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>done</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return request approved</p>\\r\\n                        <p *ngIf=\\\"tableData?.returnRequestApproved\\\"><b>{{tableData?.returnRequestApproved}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!tableData?.returnRequestApproved\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n               <!-- Canceled -->\\r\\n               <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('cancelled')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>clear</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Canceled</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Cancelled\\\"><b>{{order_countData?.Cancelled}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Cancelled\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\">\\r\\n                <h3 class=\\\"card-row\\\">Return Process</h3>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>              \\r\\n              <!-- Product Shipped by user -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Product Shipped by user')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Product Shipped by user</p>\\r\\n                        <p *ngIf=\\\"tableData?.productShippedByUser\\\"><b>{{tableData?.productShippedByUser}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!tableData?.productShippedByUser\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Product received from user -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Product received from user')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>clear</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Product received from user</p>\\r\\n                        <p *ngIf=\\\"tableData?.productReceivedFromUser\\\"><b>{{tableData?.productReceivedFromUser}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!tableData?.productReceivedFromUser\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Return/Refund -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('returnRefund')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return/Refund</p>\\r\\n                        <p ><b>{{order_countData?.returnRefund ? order_countData?.returnRefund :'0'}}</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Return/Refund Rejected -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Rejected')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return/Refund Rejected</p>\\r\\n                        <p ><b>{{order_countData?.Rejected ? order_countData?.Rejected :'0'}}</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </div>\\r\\n        <div class=\\\"card card-box card-table\\\">\\r\\n          <!-- <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"card-header-tittle\\\">\\r\\n            {{tableTitle}}  order List\\r\\n            </div>\\r\\n            <div class=\\\"card-header-action\\\">\\r\\n              <ion-button class=\\\"custom-btn\\\" (click)=\\\"openorderExportModal('orderExportModal','','')\\\">\\r\\n                <mat-icon>file_upload</mat-icon>Export Doc\\r\\n              </ion-button>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-header\\\">\\r\\n              <div class=\\\"records-wrapper\\\">\\r\\n                  <ion-item class=\\\"record\\\">\\r\\n                    <span class=\\\"text-black mr-1\\\">Records: </span>\\r\\n                    <mat-form-field  class=\\\"m-0\\\">\\r\\n                      <mat-select [(ngModel)]=\\\"displayRecord\\\" name=\\\"record\\\" (selectionChange)=\\\"displayRecordChange($event.value)\\\">\\r\\n                        <mat-option *ngFor=\\\"let record of displayRecords\\\" [value]=\\\"record.displayValue\\\">\\r\\n                          <span *ngIf=\\\"record.displayValue > 0\\\">{{record.displayValue}}</span>\\r\\n                          <!-- <span *ngIf=\\\"record.displayValue == 0\\\">All</span> -->\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </ion-item>\\r\\n              </div>\\r\\n              <div class=\\\"search-wrapper\\\">\\r\\n                <ion-searchbar class=\\\"p-0\\\" showCancelButton=\\\"focus\\\" debounce=\\\"500\\\" placeholder=\\\"Search data ....\\\" [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"searchList($event)\\\"></ion-searchbar>\\r\\n              </div>\\r\\n             </div>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"ion-text-start\\\">\\r\\n                                <div>\\r\\n                                    #\\r\\n                                </div>\\r\\n                            </th>                            \\r\\n                            <th *ngFor=\\\"let th of tableHeaderData\\\" (click)=\\\"isSortTableHeader(tableHeaderData, th)\\\" class=\\\"ion-text-center\\\">\\r\\n                              <div>\\r\\n                                {{th.display_name}}\\r\\n                                <mat-icon *ngIf=\\\"th.sortingButtonName == ''\\\">import_export</mat-icon>\\r\\n                                <mat-icon *ngIf=\\\"th.sortingButtonName == 'ASC'\\\">expand_less</mat-icon>\\r\\n                                <mat-icon *ngIf=\\\"th.sortingButtonName == 'DESC'\\\">expand_more</mat-icon>\\r\\n                              </div>\\r\\n                            </th>\\r\\n                            <th class=\\\"\\\">\\r\\n                              <div class=\\\"justify-content-center\\\">\\r\\n                                Order Status\\r\\n                              </div>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr  [hidden]=\\\"!isListLoading\\\" class=\\\"loading-table-data\\\">\\r\\n                        <td colspan=\\\"100\\\" class=\\\"text-center\\\">\\r\\n                          Data is loading...\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr [hidden]=\\\"isListLoading\\\" *ngIf=\\\"tableData?.data.length == 0\\\" class=\\\"loading-table-data\\\">\\r\\n                        <td colspan=\\\"100\\\" class=\\\"text-center\\\">\\r\\n                          No data found\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr [hidden]=\\\"isListLoading\\\" *ngFor=\\\"let item of tableData?.data; let i = index\\\">\\r\\n                        <td>{{i + 1}}</td>\\r\\n                        <td>\\r\\n                          <a [routerLink]=\\\"['/', 'order-products-list', item?.orderId,item?.productId]\\\" class=\\\"text-decoration-none\\\">{{item?.orderId}}</a>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.invoiceId ? item?.invoiceId : 'N/A'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.displayName}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.createdOn}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.mrp}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.discount ? item?.discount : '0'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.salesPrice ? item?.salesPrice : 'N/A'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.giftWrapAmount ? item?.giftWrapAmount : '0'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                           {{item?.paymentData?.paymentMode ? item?.paymentData?.paymentMode : 'N/A'}}\\r\\n                        </td>\\r\\n                        <!-- <td>\\r\\n                          {{item?.paymentData?.paymentDetails?.razorpay_order_id}}\\r\\n                        </td> -->\\r\\n                        <td>\\r\\n                          {{item?.paymentData?.paymentDetails?.razorpay_payment_id ? item?.paymentData?.paymentDetails?.razorpay_payment_id : 'N/A'}}\\r\\n                        </td>\\r\\n                        <td class=\\\"ion-text-center\\\">\\r\\n                          <!-- <span class=\\\"status\\\" [ngClass]=\\\"{'success': item?.deliveryStatus == 'dispatch'}\\\" *ngIf=\\\"item?.deliveryStatus != 'cancel' && item?.paymentData && item?.paymentData?.paymentStatus != 'FALLED'\\\">\\r\\n                            {{item?.deliveryStatus}}\\r\\n                          </span>\\r\\n                          <span class=\\\"status success\\\" *ngIf=\\\"!item?.paymentData || item?.paymentData?.paymentStatus == 'FALLED'\\\">\\r\\n                            Order Not Conformed\\r\\n                          </span> -->\\r\\n                          <!-- <span class=\\\"status danger\\\"  *ngIf=\\\"item.deliveryStatus == 'cancel'\\\">\\r\\n                            {{item?.deliveryStatus}}\\r\\n                          </span>  -->\\r\\n                          <span class=\\\"status\\\" *ngIf=\\\"item?.orderItemStatus != 'returnRefund' && item?.orderItemStatus != 'Rejected' && item?.paymentData\\\" [ngClass]=\\\"{'success': item?.orderItemStatus == 'Delivered' ,'danger': item?.orderItemStatus == 'cancelled' || item?.orderItemStatus == 'Request for cancelation', 'warning': item?.orderItemStatus == 'New' || item?.orderItemStatus == 'Return request approved' || item?.orderItemStatus == 'Product received from user' || item?.orderItemStatus == 'Product shipped by user' || item?.orderItemStatus == 'Orders' || item?.orderItemStatus == 'Packed' || item?.orderItemStatus == 'Shipped' || item?.orderItemStatus == 'returnRequest' }\\\">\\r\\n                            {{item?.orderItemStatus == 'returnRequest' ? 'Return Request' : item?.orderItemStatus}}\\r\\n                          </span>\\r\\n                          <span class=\\\"status success\\\" *ngIf=\\\"item?.orderItemStatus == 'returnRefund' && item?.paymentData\\\">\\r\\n                            Return/Refund\\r\\n                          </span>\\r\\n                          <span class=\\\"status warning\\\" *ngIf=\\\"item?.orderItemStatus == 'Rejected' && item?.paymentData\\\">\\r\\n                            Return Rejected\\r\\n                          </span>\\r\\n                          <span class=\\\"status warning\\\" *ngIf=\\\"!item?.paymentData\\\">\\r\\n                            Order Not Confirmed\\r\\n                          </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            <div class=\\\"action\\\">\\r\\n              <ion-button matTooltip=\\\"Refresh\\\" matTooltipPosition=\\\"above\\\" size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"onRefresh()\\\">\\r\\n                <mat-icon>refresh</mat-icon>\\r\\n              </ion-button>\\r\\n            </div>\\r\\n            <div>\\r\\n                <ul class=\\\"pagination\\\">\\r\\n                    <li (click)=\\\"setPage(0)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === 0}\\\" class=\\\"circle-border\\\" matTooltip=\\\"First\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- First -->\\r\\n                          <ion-icon name=\\\"play-skip-back\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li (click)=\\\"setPage(tableData.currentPage - 1)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === 0}\\\" class=\\\"circle-border\\\" matTooltip=\\\"Previous\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- Previous -->\\r\\n                          <ion-icon name=\\\"caret-back\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li> <span class=\\\"ran-separator pull-right margin-top-3\\\"></span> </li>\\r\\n                    <li>\\r\\n                        Page <a>{{ tableData?.currentPage + 1 }}</a> of {{ tableData?.totalPage + 1 }} \\r\\n                    </li>\\r\\n                    <li> <span class=\\\"ran-separator pull-right margin-top-3\\\"></span> </li>\\r\\n                    <li (click)=\\\"setPage(tableData.currentPage + 1)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === tableData?.totalPage}\\\" class=\\\"circle-border\\\" matTooltip=\\\"Next\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- Next -->\\r\\n                          <ion-icon name=\\\"caret-forward\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li (click)=\\\"setPage(tableData.totalPage)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === tableData?.totalPage}\\\" class=\\\"circle-border\\\" matTooltip=\\\"Last\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- Last -->\\r\\n                          <ion-icon name=\\\"play-skip-forward\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\\r\\n<!-- common footer show -->\\r\\n<common-footer></common-footer>\";"],"sourceRoot":"webpack:///"}