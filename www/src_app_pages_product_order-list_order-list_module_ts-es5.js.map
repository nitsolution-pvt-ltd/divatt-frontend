{"version":3,"sources":["webpack:///src/app/pages/product/order-list/order-list-routing.module.ts","webpack:///src/app/pages/product/order-list/order-list.module.ts","webpack:///src/app/pages/product/order-list/order-list.page.ts","webpack:///src/app/pages/product/order-list/order-list.page.scss","webpack:///src/app/pages/product/order-list/order-list.page.html"],"names":["routes","path","component","OrderListPage","OrderListPageRoutingModule","NgModule","imports","RouterModule","exports","OrderListPageModule","CommonModule","FormsModule","IonicModule","SharedModule","declarations","http","toastController","modalController","alertController","commonUtils","authService","router","statustype","tableTitle","order_countData","tableListData","itemcheckClick","checkedList","tableHeaderData","column_name","display_name","sortingButtonName","isListLoading","sortColumnName","sortOrderName","deleteLoading","restoreLoading","displayRecord","displayRecords","id","displayValue","searchTerm","commonFunction","allselectModel","globalparamsData","subscribe","res","authority","permissionDataSubscribe","menuPermissionObservable","data","pageUrl","url","split","item","modDetails","modPrivs","list","pagePermission","listing_url","onRefresh","navigateByUrl","identifier","_record","pageNo","onListDate","status","_listUrl","_pageNo","_displayRecord","_sortColumnName","_sortOrderName","_searchTerm","api","tableListSubscribe","get","tableData","count","index","length","createdOn","format","New","Orders","Cancelation","Active","Delivered","Packed","returnRefund","Shipped","Cancelled","returnRequest","Rejected","rejected","requestForCancelation","returnRejectedByAdmin","i","j","isSelected","errRes","page","_tableHeaderData","_headerItem","forEach","val","orederShow","event","target","value","tableValueType","_identifier","_item","_items","create","ModalPage","cssClass","componentProps","modalForm_item","modalForm_array","orderCommentmodal","onDidDismiss","then","getdata","present","undefined","unsubscribe","HttpClient","ToastController","ModalController","AlertController","CommonUtils","AuthService","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_product_order-list_order-list_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OrderListPage } from './order-list.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderListPage\r\n  },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class OrderListPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { OrderListPageRoutingModule } from './order-list-routing.module';\r\n\r\nimport { OrderListPage } from './order-list.page';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SharedModule,\r\n    OrderListPageRoutingModule\r\n  ],\r\n  declarations: [OrderListPage]\r\n})\r\nexport class OrderListPageModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController, ModalController, AlertController } from '@ionic/angular';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { CommonUtils } from 'src/app/services/common-utils/common-utils';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ModalPage } from '../../modal/modal.page';\r\n@Component({\r\n  selector: \"app-order-list\",\r\n  templateUrl: \"./order-list.page.html\",\r\n  styleUrls: [\"./order-list.page.scss\"],\r\n})\r\nexport class OrderListPage implements OnInit {\r\n  url: string;\r\n  statustype = 'New'\r\n  tableTitle ='New';\r\n  order_countData: any ={};\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    public toastController: ToastController,\r\n    private modalController: ModalController,\r\n    private alertController: AlertController,\r\n    private commonUtils: CommonUtils,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n  tableListData = [];\r\n  allselectModel;\r\n  itemcheckClick = false;\r\n  checkedList = [];\r\n  tableHeaderData = [\r\n    {\r\n      column_name: \"orderId\",\r\n      display_name: \"Order Id\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"invoiceId\",\r\n      display_name: \"invoice Id\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"displayName\",\r\n      display_name: \"display Name\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"createdOn\",\r\n      display_name: \"Order Date\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"cancelationTime\",\r\n      display_name: \"Canceled Date\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"mrp\",\r\n      display_name: \"MRP\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"discount\",\r\n      display_name: \"Discount\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"salesPrice\",\r\n      display_name: \"sales Price\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"giftWrapAmount\",\r\n      display_name: \"giftWrap Amount\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"paymentMode\",\r\n      display_name: \"Payment Mode\",\r\n      sortingButtonName: \"\",\r\n    },\r\n    {\r\n      column_name: \"razorpay_payment_id\",\r\n      display_name: \"Razorpay Payment id\",\r\n      sortingButtonName: \"\",\r\n    },\r\n  ];\r\n  isListLoading = false;\r\n  listing_url;\r\n  tableData;\r\n  pageNo;\r\n  sortColumnName = \"\";\r\n  sortOrderName = \"\";\r\n  deleteApi;\r\n  deleteLoading = false;\r\n  restoreApi;\r\n  restoreLoading = false;\r\n  tableValueType;\r\n  private changeStatusSubscribe: Subscription;\r\n  private tableListSubscribe: Subscription;\r\n  private deleteDataSubscribe: Subscription;\r\n  private permissionDataSubscribe: Subscription;\r\n  \r\n  pagePermission;\r\n  // Variables end\r\n\r\n  ngOnInit() {\r\n    // this.commonFunction();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.commonFunction();\r\n  }\r\n\r\n  commonFunction() {\r\n    this.allselectModel = false;\r\n    this.checkedList = [];\r\n    \r\n    \r\n    /*Check permission status start*/\r\n    this.authService.globalparamsData.subscribe((res) => {\r\n      // console.log(\"res>>\", res);\r\n      if (res.authority == \"ADMIN\") {\r\n        this.permissionDataSubscribe =\r\n          this.commonUtils.menuPermissionObservable.subscribe((data) => {\r\n            if (data) {\r\n              // console.log(\"menu>>\", data);\r\n              // console.log(\"this.router.url>>\", this.router.url);\r\n\r\n              let pageUrl = this.router.url.split(\"/\");\r\n              // console.log(\"pageUrl\", pageUrl);\r\n\r\n              for (let item of data) {\r\n                if (item.modDetails.url == pageUrl[1]) {\r\n                  if (item.modPrivs.list == true) {\r\n                    // console.log(\"-----Permission Granted-----\");\r\n                    this.pagePermission = item;\r\n                    // console.log(\"this.pagePermission\", this.pagePermission);\r\n                    this.listing_url = \"userOrder/skuList\";\r\n                    this.onRefresh();\r\n                    // delete api\r\n                    break;\r\n                  } else {\r\n                    // console.log(\"-------No Permission--------\");\r\n                    this.router.navigateByUrl(\"/error\");\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        this.router.navigateByUrl(\"/error\");\r\n      }\r\n    });\r\n    /*Check permission status end*/\r\n  }\r\n\r\n   // datatype start\r\n   datatype(identifier)\r\n   {\r\n       // console.log(identifier);\r\n       this.statustype = identifier;\r\n       this.tableTitle =identifier;\r\n     this.onRefresh()\r\n    //  this.onListDate(this.statustype,this.listing_url, this.pageNo, this.displayRecord, this.sortColumnName, this.sortOrderName, this.searchTerm);\r\n   }\r\n   // datatype end\r\n\r\n  /*----------------Table list data start----------------*/\r\n\r\n  // Display records start\r\n  displayRecord = 10;\r\n  displayRecords = [\r\n    { id : '1', displayValue: 10},\r\n    { id : '2', displayValue: 25},\r\n    { id : '3', displayValue: 50},\r\n    { id : '4', displayValue: 100},\r\n    // { id : '5', displayValue: '0'}\r\n  ];\r\n  displayRecordChange(_record) {\r\n    // console.log(\"_record\", _record);\r\n    \r\n    this.displayRecord = _record;\r\n    this.pageNo = 0;\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,_record,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n  }\r\n  // Display records end\r\n  // List data start\r\n  onListDate(status,_listUrl,_pageNo,_displayRecord,_sortColumnName,_sortOrderName,_searchTerm) {\r\n    this.isListLoading = true;\r\n    let api = _listUrl+'?orderItemStatus='+status+'&page='+_pageNo+'&limit='+_displayRecord+'&sortName='+_sortColumnName+'&sort='+_sortOrderName+'&keyword='+_searchTerm;\r\n    \r\n    this.tableListSubscribe = this.http.get(api).subscribe(\r\n      (res: any) => {\r\n        this.isListLoading = false;\r\n        // console.log(\"res data......\", res);\r\n        this.tableData = res;\r\n        var count = [];\r\n        count = res?.data;\r\n        for (let index = 0; index < count.length; index++) {\r\n\r\n          this.tableData.data[index].createdOn = moment(res?.data[index].createdOn,'DD/MM/YYYY hh:mm:ss').format('DD-MM-YYYY');\r\n          \r\n        }\r\n        this.tableListData = res.data;\r\n        this.order_countData = {\r\n          New:res.New,\r\n          Orders:res.Orders,\r\n          Cancelation:res.Cancelation,\r\n          Active:res.Active,\r\n          Delivered:res.Delivered,\r\n          Packed:res.Packed,\r\n          returnRefund:res.returnRefund,\r\n          Shipped:res.Shipped,\r\n          Cancelled:res.Cancelled,\r\n          returnRequest:res.returnRequest,\r\n          Rejected:res.rejected,\r\n          requestForCancelation:res.requestForCancelation,\r\n          returnRejectedByAdmin: res.returnRejectedByAdmin\r\n        };\r\n        // console.log(\"Order Count Data....\",this.order_countData);\r\n         \r\n\r\n        //---------  check item show start ----------\r\n        if (this.tableListData && this.checkedList) {\r\n          for (let i = 0; i < this.tableListData.length; i++) {\r\n            for (let j = 0; j < this.checkedList.length; j++) {\r\n              if (this.checkedList[j].id == this.tableListData[i].id) {\r\n                this.tableListData[i].isSelected = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      (errRes) => {\r\n        // this.selectLoadingDepend = false;\r\n        this.isListLoading = false;\r\n      }\r\n    );\r\n  }\r\n  // List data end\r\n\r\n  // Pagination start\r\n  setPage(page: number) {\r\n    // console.log(\"page\", page);\r\n    // console.log(\"page\");\r\n\r\n    this.pageNo = page;\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n  }\r\n  // Pagination end\r\n\r\n  // Sorting start\r\n  isSortTableHeader(_tableHeaderData, _headerItem) {\r\n    // console.log(\"_tableHeaderData\", _tableHeaderData);\r\n    // console.log(\"_headerItem\", _headerItem);\r\n\r\n    // all field reset first\r\n    _tableHeaderData.forEach((val) => {\r\n      val.sortingButtonName = \"\";\r\n    });\r\n\r\n    _headerItem.orederShow = !_headerItem.orederShow;\r\n    if (_headerItem.orederShow) {\r\n      _headerItem.sortingButtonName = \"ASC\";\r\n    } else {\r\n      _headerItem.sortingButtonName = \"DESC\";\r\n    }\r\n\r\n    this.sortColumnName = _headerItem.column_name;\r\n    this.sortOrderName = _headerItem.sortingButtonName;\r\n\r\n    // console.log(\"this.sortColumnName\", this.sortColumnName);\r\n    // console.log(\"this.sortOrderName\", this.sortOrderName);\r\n    // console.log(\"_tableHeaderData>>\", _tableHeaderData);\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n    \r\n  }\r\n  // Sorting end\r\n\r\n  // Search start\r\n  searchTerm: string = \"\";\r\n  searchList(event) {\r\n    this.searchTerm = event.target.value;\r\n\r\n    // console.log(\"this.searchTerm\", this.searchTerm);\r\n\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n\r\n  }\r\n  // Search end\r\n\r\n  // Referesh start\r\n  onRefresh() {\r\n    this.pageNo = 0;\r\n    this.sortColumnName = \"id\";\r\n    this.sortOrderName = \"DESC\";\r\n    this.searchTerm = \"\";\r\n    this.tableValueType = \"0\";\r\n    // table data call\r\n    this.onListDate(this.statustype,this.listing_url,this.pageNo,this.displayRecord,this.sortColumnName,this.sortOrderName,this.searchTerm);\r\n\r\n  }\r\n  // Referesh end\r\n \r\n  /*----------------Table list data end----------------*/\r\n  // exportDoc start\r\n  async openorderExportModal(_identifier, _item, _items) {\r\n    // console.log('openProfilemodal ...........>>', _identifier);\r\n\r\n    let orderCommentmodal;\r\n    orderCommentmodal = await this.modalController.create({\r\n      component: ModalPage,\r\n      cssClass: 'mymodalClass small profilemodal',\r\n      componentProps: { \r\n        identifier: _identifier,\r\n        modalForm_item: _item,\r\n        modalForm_array: _items\r\n      }\r\n    });\r\n    \r\n    // modal data back to Component\r\n    orderCommentmodal.onDidDismiss()\r\n    .then((getdata) => {\r\n      // console.log(\"getdata\",getdata);\r\n      this.onRefresh();\r\n      \r\n    });\r\n\r\n    return await orderCommentmodal.present();\r\n  }\r\n  // exportDoc end\r\n\r\n  // ----------- destroy unsubscription start ---------\r\n  ngOnDestroy() {\r\n    if (this.tableListSubscribe !== undefined) {\r\n      this.tableListSubscribe.unsubscribe();\r\n    }\r\n    \r\n    if (this.permissionDataSubscribe !== undefined) {\r\n      this.permissionDataSubscribe.unsubscribe();\r\n    }\r\n    \r\n  }\r\n  // ----------- destroy unsubscription end ---------\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcmRlci1saXN0LnBhZ2Uuc2NzcyJ9 */\";","export default \"<!-- common header show -->\\r\\n<common-header></common-header>\\r\\n\\r\\n<ion-content class=\\\"order-list\\\">\\r\\n  <div class=\\\"page-body\\\">\\r\\n    <div class=\\\"page-wrapper\\\">\\r\\n      <div class=\\\"table-listing\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n          <div class=\\\"page-header\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                      <div class=\\\"page-header-left\\\">\\r\\n                          <h3 *ngIf=\\\"tableTitle != 'returnRequest' && tableTitle !='returnRefund'\\\">{{tableTitle}} Order List</h3>\\r\\n                          <h3 *ngIf=\\\"tableTitle == 'returnRequest' || tableTitle =='returnRefund'\\\">{{tableTitle =='returnRefund' ? 'Return/Refund' : 'Return Request'}} Order List</h3>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <ol class=\\\"breadcrumb float-right\\\">\\r\\n                        <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/dashboard'\\\">\\r\\n                                <mat-icon>home</mat-icon>\\r\\n                            </a></li>\\r\\n                        <li class=\\\"breadcrumb-item\\\">\\r\\n                          Order Management\\r\\n                        </li>\\r\\n                        <li class=\\\"breadcrumb-item active\\\">\\r\\n                          Order List\\r\\n                        </li>\\r\\n                    </ol>\\r\\n                </div>\\r\\n                  <!-- <div class=\\\"col-lg-6\\\">\\r\\n                      <ol class=\\\"breadcrumb pull-right\\\">\\r\\n                          <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"'/dashboard'\\\">\\r\\n                                  <app-feather-icons [icon]=\\\"'home'\\\"></app-feather-icons>\\r\\n                              </a></li>\\r\\n                          <li class=\\\"breadcrumb-item\\\" *ngIf=\\\"breadcrumbs?.parentBreadcrumb\\\">\\r\\n                            Product\\r\\n                          </li>\\r\\n                          <li class=\\\"breadcrumb-item active\\\" *ngIf=\\\"breadcrumbs?.childBreadcrumb\\\">\\r\\n                              Category\\r\\n                          </li>\\r\\n                      </ol>\\r\\n                  </div> -->\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"note-section\\\">\\r\\n          <ion-grid>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\">\\r\\n                <h3 class=\\\"card-row\\\">Orders</h3>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-primary card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('New')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon> new_releases </mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">New</p>\\r\\n                        <p *ngIf=\\\"order_countData?.New\\\"><b>{{order_countData?.New}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.New\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-Purple card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Orders')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>add_shopping_cart</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Orders</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Orders\\\"><b>{{order_countData?.Orders}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Orders\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-info card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Packed')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>store</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Packed</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Packed\\\"><b>{{order_countData?.Packed}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Packed\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-warning card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Shipped')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon> local_shipping</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Shipped</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Shipped\\\"><b>{{order_countData?.Shipped}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Shipped\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-success card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Delivered')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_turned_in</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Delivered</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Delivered\\\"><b>{{order_countData?.Delivered}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Delivered\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\">\\r\\n                <h3 class=\\\"card-row\\\">Approvals</h3>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <!-- Return Request -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('returnRequest')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return Request</p>\\r\\n                        <p *ngIf=\\\"order_countData?.returnRequest\\\"><b>{{order_countData?.returnRequest}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.returnRequest\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Cancel Request -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Request for cancelation')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>cancel_presentation</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Cancel Request</p>\\r\\n                        <p *ngIf=\\\"order_countData?.requestForCancelation\\\"><b>{{order_countData?.requestForCancelation}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.requestForCancelation\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Return Rejected -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Return rejected by admin')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>sync_disabled</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return Request Rejected</p>\\r\\n\\r\\n                        <p *ngIf=\\\"order_countData?.returnRejectedByAdmin\\\"><b>{{order_countData?.returnRejectedByAdmin}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.returnRejectedByAdmin\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- return request approve -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Return request approved')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>done</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return request approved</p>\\r\\n                        <p *ngIf=\\\"tableData?.returnRequestApproved\\\"><b>{{tableData?.returnRequestApproved}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!tableData?.returnRequestApproved\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n               <!-- Canceled -->\\r\\n               <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('cancelled')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>clear</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Canceled</p>\\r\\n                        <p *ngIf=\\\"order_countData?.Cancelled\\\"><b>{{order_countData?.Cancelled}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!order_countData?.Cancelled\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"12\\\" size-md=\\\"12\\\" size-lg=\\\"12\\\">\\r\\n                <h3 class=\\\"card-row\\\">Return Process</h3>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>              \\r\\n              <!-- Product Shipped by user -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Product shipped by user')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Product Shipped by user</p>\\r\\n                        <p *ngIf=\\\"tableData?.productShippedByUser\\\"><b>{{tableData?.productShippedByUser}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!tableData?.productShippedByUser\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Product received from user -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Product received from user')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>clear</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Product received from user</p>\\r\\n                        <p *ngIf=\\\"tableData?.productReceivedFromUser\\\"><b>{{tableData?.productReceivedFromUser}}</b> Products</p>\\r\\n                        <p *ngIf=\\\"!tableData?.productReceivedFromUser\\\"><b>0</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Return/Refund -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('returnRefund')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return/Refund</p>\\r\\n                        <p ><b>{{order_countData?.returnRefund ? order_countData?.returnRefund :'0'}}</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n              <!-- Return/Refund Rejected -->\\r\\n              <ion-col size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"2.4\\\">\\r\\n                <div class=\\\"note-item note-item2 note-box-danger card-outer order-cards\\\">\\r\\n                  <div matRipple class=\\\"card card-box\\\" (click)=\\\"datatype('Rejected')\\\">\\r\\n                      <div class=\\\"top\\\">\\r\\n                          <div class=\\\"icon\\\">\\r\\n                            <mat-icon>assignment_return</mat-icon>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"bottom\\\">\\r\\n                        <p class=\\\"heading\\\">Return/Refund Rejected</p>\\r\\n                        <p ><b>{{order_countData?.Rejected ? order_countData?.Rejected :'0'}}</b> Products</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>             \\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </div>\\r\\n        <div class=\\\"card card-box card-table\\\">\\r\\n          <!-- <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"card-header-tittle\\\">\\r\\n            {{tableTitle}}  order List\\r\\n            </div>\\r\\n            <div class=\\\"card-header-action\\\">\\r\\n              <ion-button class=\\\"custom-btn\\\" (click)=\\\"openorderExportModal('orderExportModal','','')\\\">\\r\\n                <mat-icon>file_upload</mat-icon>Export Doc\\r\\n              </ion-button>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-header\\\">\\r\\n              <div class=\\\"records-wrapper\\\">\\r\\n                  <ion-item class=\\\"record\\\">\\r\\n                    <span class=\\\"text-black mr-1\\\">Records: </span>\\r\\n                    <mat-form-field  class=\\\"m-0\\\">\\r\\n                      <mat-select [(ngModel)]=\\\"displayRecord\\\" name=\\\"record\\\" (selectionChange)=\\\"displayRecordChange($event.value)\\\">\\r\\n                        <mat-option *ngFor=\\\"let record of displayRecords\\\" [value]=\\\"record.displayValue\\\">\\r\\n                          <span *ngIf=\\\"record.displayValue > 0\\\">{{record.displayValue}}</span>\\r\\n                          <!-- <span *ngIf=\\\"record.displayValue == 0\\\">All</span> -->\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </ion-item>\\r\\n              </div>\\r\\n              <div class=\\\"search-wrapper\\\">\\r\\n                <ion-searchbar class=\\\"p-0\\\" showCancelButton=\\\"focus\\\" debounce=\\\"500\\\" placeholder=\\\"Search data ....\\\" [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"searchList($event)\\\"></ion-searchbar>\\r\\n              </div>\\r\\n             </div>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th class=\\\"ion-text-start\\\">\\r\\n                                <div>\\r\\n                                    #\\r\\n                                </div>\\r\\n                            </th>                            \\r\\n                            <th *ngFor=\\\"let th of tableHeaderData\\\"  [hidden]=\\\"th.column_name =='createdOn' && tableTitle == 'cancelled' || th.column_name =='cancelationTime' && tableTitle !== 'cancelled'\\\" (click)=\\\"isSortTableHeader(tableHeaderData, th)\\\" class=\\\"ion-text-center\\\">\\r\\n                              <div>\\r\\n                                <span>{{th.display_name}}</span>\\r\\n                                \\r\\n                                <mat-icon *ngIf=\\\"th.sortingButtonName == ''\\\">import_export</mat-icon>\\r\\n                                <mat-icon *ngIf=\\\"th.sortingButtonName == 'ASC'\\\">expand_less</mat-icon>\\r\\n                                <mat-icon *ngIf=\\\"th.sortingButtonName == 'DESC'\\\">expand_more</mat-icon>\\r\\n                              </div>\\r\\n                            </th>\\r\\n                            <th class=\\\"\\\">\\r\\n                              <div class=\\\"justify-content-center\\\">\\r\\n                                Order Status\\r\\n                              </div>\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr  [hidden]=\\\"!isListLoading\\\" class=\\\"loading-table-data\\\">\\r\\n                        <td colspan=\\\"100\\\" class=\\\"text-center\\\">\\r\\n                          Data is loading...\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr [hidden]=\\\"isListLoading\\\" *ngIf=\\\"tableData?.data.length == 0\\\" class=\\\"loading-table-data\\\">\\r\\n                        <td colspan=\\\"100\\\" class=\\\"text-center\\\">\\r\\n                          No data found\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr [hidden]=\\\"isListLoading\\\" *ngFor=\\\"let item of tableData?.data; let i = index\\\" [routerLink]=\\\"['/', 'order-products-list', item?.orderId,item?.productId,item?.size]\\\">\\r\\n                        <td>{{i + 1}}</td>\\r\\n                        <td>\\r\\n                          <a [routerLink]=\\\"['/', 'order-products-list', item?.orderId,item?.productId,item?.size]\\\" class=\\\"text-decoration-none\\\">{{item?.orderId}}</a>\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.invoiceId ? item?.invoiceId : 'N/A'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.displayName}}\\r\\n                        </td>\\r\\n                        <td *ngIf=\\\"tableTitle !== 'cancelled'\\\">\\r\\n                          {{item?.createdOn}}\\r\\n                        </td>\\r\\n                        <td *ngIf=\\\"tableTitle == 'cancelled'\\\">\\r\\n                          {{item?.orderStatusDetails?.cancelOrderDetails?.cancelationTime}}\\r\\n                          {{item?.orderStatusDetails?.cancelFromUser?.dateTime | date:'dd MMM yyy'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.mrp}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.discount ? item?.discount : '0'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.salesPrice ? item?.salesPrice : 'N/A'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                          {{item?.giftWrapAmount ? item?.giftWrapAmount : '0'}}\\r\\n                        </td>\\r\\n                        <td>\\r\\n                           {{item?.paymentData?.paymentMode ? item?.paymentData?.paymentMode : 'N/A'}}\\r\\n                        </td>\\r\\n                        <!-- <td>\\r\\n                          {{item?.paymentData?.paymentDetails?.razorpay_order_id}}\\r\\n                        </td> -->\\r\\n                        <td>\\r\\n                          {{item?.paymentData?.paymentDetails?.razorpay_payment_id ? item?.paymentData?.paymentDetails?.razorpay_payment_id : 'N/A'}}\\r\\n                        </td>\\r\\n                        <td class=\\\"ion-text-center\\\">\\r\\n                          <!-- <span class=\\\"status\\\" [ngClass]=\\\"{'success': item?.deliveryStatus == 'dispatch'}\\\" *ngIf=\\\"item?.deliveryStatus != 'cancel' && item?.paymentData && item?.paymentData?.paymentStatus != 'FALLED'\\\">\\r\\n                            {{item?.deliveryStatus}}\\r\\n                          </span>\\r\\n                          <span class=\\\"status success\\\" *ngIf=\\\"!item?.paymentData || item?.paymentData?.paymentStatus == 'FALLED'\\\">\\r\\n                            Order Not Conformed\\r\\n                          </span> -->\\r\\n                          <!-- <span class=\\\"status danger\\\"  *ngIf=\\\"item.deliveryStatus == 'cancel'\\\">\\r\\n                            {{item?.deliveryStatus}}\\r\\n                          </span>  -->\\r\\n                          <span class=\\\"status\\\" *ngIf=\\\"item?.orderItemStatus != 'returnRefund' && item?.orderItemStatus != 'Rejected' && item?.paymentData\\\" [ngClass]=\\\"{'success': item?.orderItemStatus == 'Delivered' ,'danger': item?.orderItemStatus == 'cancelled' || item?.orderItemStatus == 'Request for cancelation', 'warning': item?.orderItemStatus == 'New' || item?.orderItemStatus == 'Return request approved' || item?.orderItemStatus == 'Product received from user' || item?.orderItemStatus == 'Product shipped by user' || item?.orderItemStatus == 'Orders' || item?.orderItemStatus == 'Packed' || item?.orderItemStatus == 'Shipped' || item?.orderItemStatus == 'returnRequest' }\\\">\\r\\n                            {{item?.orderItemStatus == 'returnRequest' ? 'Return Request' : item?.orderItemStatus}}\\r\\n                          </span>\\r\\n                          <span class=\\\"status success\\\" *ngIf=\\\"item?.orderItemStatus == 'returnRefund' && item?.paymentData\\\">\\r\\n                            Return/Refund\\r\\n                          </span>\\r\\n                          <span class=\\\"status warning\\\" *ngIf=\\\"item?.orderItemStatus == 'Rejected' && item?.paymentData\\\">\\r\\n                            Return Rejected\\r\\n                          </span>\\r\\n                          <span class=\\\"status warning\\\" *ngIf=\\\"!item?.paymentData\\\">\\r\\n                            Order Not Confirmed\\r\\n                          </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            <div class=\\\"action\\\">\\r\\n              <ion-button matTooltip=\\\"Refresh\\\" matTooltipPosition=\\\"above\\\" size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"onRefresh()\\\">\\r\\n                <mat-icon>refresh</mat-icon>\\r\\n              </ion-button>\\r\\n            </div>\\r\\n            <div>\\r\\n                <ul class=\\\"pagination\\\">\\r\\n                    <li (click)=\\\"setPage(0)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === 0}\\\" class=\\\"circle-border\\\" matTooltip=\\\"First\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- First -->\\r\\n                          <ion-icon name=\\\"play-skip-back\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li (click)=\\\"setPage(tableData.currentPage - 1)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === 0}\\\" class=\\\"circle-border\\\" matTooltip=\\\"Previous\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- Previous -->\\r\\n                          <ion-icon name=\\\"caret-back\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li> <span class=\\\"ran-separator pull-right margin-top-3\\\"></span> </li>\\r\\n                    <li>\\r\\n                        Page <a>{{ tableData?.currentPage + 1 }}</a> of {{ tableData?.totalPage + 1 }} \\r\\n                    </li>\\r\\n                    <li> <span class=\\\"ran-separator pull-right margin-top-3\\\"></span> </li>\\r\\n                    <li (click)=\\\"setPage(tableData.currentPage + 1)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === tableData?.totalPage}\\\" class=\\\"circle-border\\\" matTooltip=\\\"Next\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- Next -->\\r\\n                          <ion-icon name=\\\"caret-forward\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                    <li (click)=\\\"setPage(tableData.totalPage)\\\" [ngClass]=\\\"{disabled:tableData?.currentPage === tableData?.totalPage}\\\" class=\\\"circle-border\\\" matTooltip=\\\"Last\\\" matTooltipPosition=\\\"above\\\">\\r\\n                        <a>\\r\\n                          <!-- Last -->\\r\\n                          <ion-icon name=\\\"play-skip-forward\\\"></ion-icon>\\r\\n                        </a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\\r\\n<!-- common footer show -->\\r\\n<common-footer></common-footer>\";"]}